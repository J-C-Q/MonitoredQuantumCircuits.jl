import{_ as n,c as o,j as i,a as s,I as a,a7 as e,o as r,D as l}from"./chunks/framework.Ck1NKG2X.js";const $=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"api.md","filePath":"api.md","lastUpdated":null}'),p={name:"api.md"},h={class:"jldocstring custom-block",open:""},c=i("a",{id:"MonitoredQuantumCircuits.XX",href:"#MonitoredQuantumCircuits.XX"},[i("span",{class:"jlbinding"},"MonitoredQuantumCircuits.XX")],-1),d=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">XX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Operation</span></span></code></pre></div><p>A singelton type representing the XX operation.</p><p><a href="https://github.com/J-C-Q/MonitoredQuantumCircuits.jl/blob/863b449a164337efae37ea9d6121c921a9dd2910/src/operations/XX.jl#L1-L5" target="_blank" rel="noreferrer">source</a></p>',3),u={class:"jldocstring custom-block",open:""},k=i("a",{id:"MonitoredQuantumCircuits.YY",href:"#MonitoredQuantumCircuits.YY"},[i("span",{class:"jlbinding"},"MonitoredQuantumCircuits.YY")],-1),_=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">YY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Operation</span></span></code></pre></div><p>A singelton type representing the YY operation.</p><p><a href="https://github.com/J-C-Q/MonitoredQuantumCircuits.jl/blob/863b449a164337efae37ea9d6121c921a9dd2910/src/operations/YY.jl#L1-L5" target="_blank" rel="noreferrer">source</a></p>',3),g={class:"jldocstring custom-block",open:""},C=i("a",{id:"MonitoredQuantumCircuits.ZZ",href:"#MonitoredQuantumCircuits.ZZ"},[i("span",{class:"jlbinding"},"MonitoredQuantumCircuits.ZZ")],-1),b=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ZZ</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Operation</span></span></code></pre></div><p>A singelton type representing the ZZ operation.</p><p><a href="https://github.com/J-C-Q/MonitoredQuantumCircuits.jl/blob/863b449a164337efae37ea9d6121c921a9dd2910/src/operations/ZZ.jl#L1-L5" target="_blank" rel="noreferrer">source</a></p>',3),m={class:"jldocstring custom-block",open:""},y=i("a",{id:"MonitoredQuantumCircuits.EmptyCircuit-Tuple{MonitoredQuantumCircuits.Lattice}",href:"#MonitoredQuantumCircuits.EmptyCircuit-Tuple{MonitoredQuantumCircuits.Lattice}"},[i("span",{class:"jlbinding"},"MonitoredQuantumCircuits.EmptyCircuit")],-1),E=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EmptyCircuit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(lattice</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Lattice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create an empty circuit on the given lattice.</p><p><a href="https://github.com/J-C-Q/MonitoredQuantumCircuits.jl/blob/863b449a164337efae37ea9d6121c921a9dd2910/src/circuit.jl#L17-L21" target="_blank" rel="noreferrer">source</a></p>',3),f={class:"jldocstring custom-block",open:""},T=i("a",{id:"MonitoredQuantumCircuits.apply!-Tuple{Circuit, Integer, MonitoredQuantumCircuits.Operation, Vararg{Integer}}",href:"#MonitoredQuantumCircuits.apply!-Tuple{Circuit, Integer, MonitoredQuantumCircuits.Operation, Vararg{Integer}}"},[i("span",{class:"jlbinding"},"MonitoredQuantumCircuits.apply!")],-1),j=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">apply!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(circuit</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Circuit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, executionPosition</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, operation</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Operation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, position</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vararg{Integer}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Apply the given operation at a given execution time step at the given position(s) in the circuit. The executionPosition can be used to schedule multiple operations at the same time step. However it is important to first check if the operations are compatible with each other (as of now this will show a warning which can be muted with <code>mute=true</code>).</p><p><a href="https://github.com/J-C-Q/MonitoredQuantumCircuits.jl/blob/863b449a164337efae37ea9d6121c921a9dd2910/src/circuit.jl#L60-L64" target="_blank" rel="noreferrer">source</a></p>',3),M={class:"jldocstring custom-block",open:""},Q=i("a",{id:"MonitoredQuantumCircuits.apply!-Tuple{Circuit, MonitoredQuantumCircuits.Operation, Vararg{Integer}}",href:"#MonitoredQuantumCircuits.apply!-Tuple{Circuit, MonitoredQuantumCircuits.Operation, Vararg{Integer}}"},[i("span",{class:"jlbinding"},"MonitoredQuantumCircuits.apply!")],-1),F=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">apply!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(circuit</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Circuit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, operation</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Operation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, position</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vararg{Integer}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Apply the given operation at the given position(s) in the circuit. Operations that act on more than one qubit need to have the same number of position arguments as qubits they act on, as well as a connection structure that is part of the lattice.</p><p><a href="https://github.com/J-C-Q/MonitoredQuantumCircuits.jl/blob/863b449a164337efae37ea9d6121c921a9dd2910/src/circuit.jl#L37-L41" target="_blank" rel="noreferrer">source</a></p>',3),v={class:"jldocstring custom-block",open:""},A=i("a",{id:"MonitoredQuantumCircuits.connectionGraph-Tuple{MonitoredQuantumCircuits.Operation}",href:"#MonitoredQuantumCircuits.connectionGraph-Tuple{MonitoredQuantumCircuits.Operation}"},[i("span",{class:"jlbinding"},"MonitoredQuantumCircuits.connectionGraph")],-1),S=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">connectionGraph</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(operation</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Operation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return a graph representing the unique gate connections of the operation.</p><p><a href="https://github.com/J-C-Q/MonitoredQuantumCircuits.jl/blob/863b449a164337efae37ea9d6121c921a9dd2910/src/operations.jl#L22-L26" target="_blank" rel="noreferrer">source</a></p>',3),B={class:"jldocstring custom-block",open:""},I=i("a",{id:"MonitoredQuantumCircuits.isClifford-Tuple{Circuit}",href:"#MonitoredQuantumCircuits.isClifford-Tuple{Circuit}"},[i("span",{class:"jlbinding"},"MonitoredQuantumCircuits.isClifford")],-1),O=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isClifford</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(circuit</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Circuit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Check if the circuit is a Clifford circuit, i.e. only contains Clifford operations. Returns true if all operations are Clifford operations, false otherwise.</p><p><a href="https://github.com/J-C-Q/MonitoredQuantumCircuits.jl/blob/863b449a164337efae37ea9d6121c921a9dd2910/src/circuit.jl#L140-L145" target="_blank" rel="noreferrer">source</a></p>',3),V={class:"jldocstring custom-block",open:""},x=i("a",{id:"MonitoredQuantumCircuits.isClifford-Tuple{MonitoredQuantumCircuits.Operation}",href:"#MonitoredQuantumCircuits.isClifford-Tuple{MonitoredQuantumCircuits.Operation}"},[i("span",{class:"jlbinding"},"MonitoredQuantumCircuits.isClifford")],-1),D=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isClifford</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(operation</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Operation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return whether the operation is a Clifford operation.</p><p><a href="https://github.com/J-C-Q/MonitoredQuantumCircuits.jl/blob/863b449a164337efae37ea9d6121c921a9dd2910/src/operations.jl#L11-L15" target="_blank" rel="noreferrer">source</a></p>',3),P={class:"jldocstring custom-block",open:""},L=i("a",{id:"MonitoredQuantumCircuits.nQubits-Tuple{MonitoredQuantumCircuits.Operation}",href:"#MonitoredQuantumCircuits.nQubits-Tuple{MonitoredQuantumCircuits.Operation}"},[i("span",{class:"jlbinding"},"MonitoredQuantumCircuits.nQubits")],-1),N=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nQubits</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(operation</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Operation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the number of qubits the operation acts on.</p><p><a href="https://github.com/J-C-Q/MonitoredQuantumCircuits.jl/blob/863b449a164337efae37ea9d6121c921a9dd2910/src/operations.jl#L3-L7" target="_blank" rel="noreferrer">source</a></p>',3);function R(X,Y,Z,w,J,q){const t=l("Badge");return r(),o("div",null,[i("details",h,[i("summary",null,[c,s(),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),d]),i("details",u,[i("summary",null,[k,s(),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),_]),i("details",g,[i("summary",null,[C,s(),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),b]),i("details",m,[i("summary",null,[y,s(),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),E]),i("details",f,[i("summary",null,[T,s(),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),j]),i("details",M,[i("summary",null,[Q,s(),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),F]),i("details",v,[i("summary",null,[A,s(),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),S]),i("details",B,[i("summary",null,[I,s(),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),O]),i("details",V,[i("summary",null,[x,s(),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),D]),i("details",P,[i("summary",null,[L,s(),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),N])])}const H=n(p,[["render",R]]);export{$ as __pageData,H as default};

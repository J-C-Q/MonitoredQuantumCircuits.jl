import{_ as e,c as t,o as i,a7 as a}from"./chunks/framework.Ck1NKG2X.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"library/lattices.md","filePath":"library/lattices.md","lastUpdated":null}'),o={name:"library/lattices.md"},c=a('<h2 id="Qubit-Geometry-/-Lattice" tabindex="-1">Qubit Geometry / Lattice <a class="header-anchor" href="#Qubit-Geometry-/-Lattice" aria-label="Permalink to &quot;Qubit Geometry / Lattice {#Qubit-Geometry-/-Lattice}&quot;">â€‹</a></h2><p>A <code>Lattice</code> is a representation of qubits and connections between them (i.e., a graph). In general, it is only possible to apply operations to multiple qubits if they are connected in the lattice. Ancillary qubits should also be explicitly represented in the lattice. Preimplemented lattices are</p><div class="warning custom-block"><p class="custom-block-title">Missing docstring.</p><p>Missing docstring for <code>HeavyChainLattice</code>. Check Documenter&#39;s build log for details.</p></div><ul><li><p><code>HeavyChainLattice(length)</code></p></li><li><p><code>HeavySquareLattice(sizeX, sizeY)</code></p></li><li><p><code>HeavyHexagonLattice(sizeX, sizeY)</code></p></li><li><p><code>HexagonToricCodeLattice(sizeX, sizeY)</code></p></li></ul>',4),s=[c];function l(r,n,d,p,_,u){return i(),t("div",null,s)}const b=e(o,[["render",l]]);export{h as __pageData,b as default};

import{_ as a,c as e,o as i,a7 as t}from"./chunks/framework.BlNHQ1cX.js";const g=JSON.parse('{"title":"Graphical User Interface (GUI)","description":"","frontmatter":{},"headers":[],"relativePath":"modules/gui.md","filePath":"modules/gui.md","lastUpdated":null}'),s={name:"modules/gui.md"},n=t('<h1 id="Graphical-User-Interface-GUI" tabindex="-1">Graphical User Interface (GUI) <a class="header-anchor" href="#Graphical-User-Interface-GUI" aria-label="Permalink to &quot;Graphical User Interface (GUI) {#Graphical-User-Interface-GUI}&quot;">​</a></h1><div class="danger custom-block"><p class="custom-block-title">Disclaimer</p><p>The graphical user interface is currently under active development. Features and functionality are not yet fully implemented.</p></div><p>MonitoredQuantumCircuits.jl provides a graphical user interface (GUI) designed to facilitate the construction and visualization of quantum circuits. The GUI aims to offer an intuitive, interactive environment for users to build and modify circuits without requiring direct manipulation of code.</p><h2 id="Usage" tabindex="-1">Usage <a class="header-anchor" href="#Usage" aria-label="Permalink to &quot;Usage {#Usage}&quot;">​</a></h2><p>To launch the GUI, first create a circuit:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">circuit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Circuit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(lattice)</span></span></code></pre></div><p>then, start the GUI with:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">GUI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CircuitComposer!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(circuit)</span></span></code></pre></div><p>This command will open the interface in your default web browser.</p>',9),r=[n];function l(c,o,p,h,d,u){return i(),e("div",null,r)}const m=a(s,[["render",l]]);export{g as __pageData,m as default};

import{_ as a,c as i,o as s,a7 as e}from"./chunks/framework.CKROT6r-.js";const g=JSON.parse('{"title":"Graphical User Interface","description":"","frontmatter":{},"headers":[],"relativePath":"gui.md","filePath":"gui.md","lastUpdated":null}'),t={name:"gui.md"},n=e('<h1 id="Graphical-User-Interface" tabindex="-1">Graphical User Interface <a class="header-anchor" href="#Graphical-User-Interface" aria-label="Permalink to &quot;Graphical User Interface {#Graphical-User-Interface}&quot;">â€‹</a></h1><p>MonitoredQuantumCircuits.jl offers a graphical user interface to construct quantum circuits. To use the interface, first create a circuit using the CLI</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">circuit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> EmptyFiniteDepthCircuit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(lattice)</span></span></code></pre></div><p>then call</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">GUI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CircuitComposer!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(circuit)</span></span></code></pre></div><p>This will open a window in your default browser.</p>',6),r=[n];function c(l,p,h,o,d,u){return s(),i("div",null,r)}const _=a(t,[["render",c]]);export{g as __pageData,_ as default};

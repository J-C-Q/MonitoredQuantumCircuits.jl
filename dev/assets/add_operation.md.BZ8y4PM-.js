import{_ as e,c as o,o as t,a7 as a}from"./chunks/framework.CKROT6r-.js";const _=JSON.parse('{"title":"How to add a new operation?","description":"","frontmatter":{},"headers":[],"relativePath":"add_operation.md","filePath":"add_operation.md","lastUpdated":null}'),i={name:"add_operation.md"},n=a('<h1 id="How-to-add-a-new-operation?" tabindex="-1">How to add a new operation? <a class="header-anchor" href="#How-to-add-a-new-operation?" aria-label="Permalink to &quot;How to add a new operation? {#How-to-add-a-new-operation?}&quot;">​</a></h1><p>Adding a new operation in MonitoredQuantumCircuits.jl is a bit more involved, since you have to implement the operation for every backend that you want to execute this operation in.</p><h2 id="The-basics" tabindex="-1">The basics <a class="header-anchor" href="#The-basics" aria-label="Permalink to &quot;The basics {#The-basics}&quot;">​</a></h2><p>Independent of which backend you would like to support the operation, you need to implement a few functions. Firstly, you need to implement a type <code>MyOperation&lt;:Operation</code> or <code>MyOperation&lt;:MeasurementOperation</code> if your operation includes measurements. Next, there are some basic interfaces that the circuit construction logic relies on. Thus, please implement the following methods for your operations:</p><ul><li><p><code>nQubits(::MyOperation)</code></p></li><li><p><code>isClifford(::MyOperation)</code></p></li><li><p><code>connectionGraph(::MyOperation)</code></p></li><li><p><code>plotPositions(::MyOperation)</code></p></li><li><p><code>color(::MyOperation)</code></p></li><li><p><code>isAncilla(::MyOperation, qubit::Integer)</code></p></li></ul><h2 id="For-each-backend" tabindex="-1">For each backend <a class="header-anchor" href="#For-each-backend" aria-label="Permalink to &quot;For each backend {#For-each-backend}&quot;">​</a></h2><h2 id="for-each-backend-that-you-want-to-support-this-operation-implement-the-following-methods" tabindex="-1">For each backend that you want to support this operation, implement the following methods: <a class="header-anchor" href="#for-each-backend-that-you-want-to-support-this-operation-implement-the-following-methods" aria-label="Permalink to &quot;For each backend that you want to support this operation, implement the following methods:&quot;">​</a></h2>',7),r=[n];function d(c,p,s,l,h,u){return t(),o("div",null,r)}const b=e(i,[["render",d]]);export{_ as __pageData,b as default};

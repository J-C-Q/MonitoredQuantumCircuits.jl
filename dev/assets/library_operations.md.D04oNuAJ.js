import{_ as n,c as l,j as t,a,I as e,w as o,a7 as i,D as r,o as p}from"./chunks/framework.BlNHQ1cX.js";const qt=JSON.parse('{"title":"Operations","description":"","frontmatter":{},"headers":[],"relativePath":"library/operations.md","filePath":"library/operations.md","lastUpdated":null}'),c={name:"library/operations.md"},u=i('<h1 id="Operations" tabindex="-1">Operations <a class="header-anchor" href="#Operations" aria-label="Permalink to &quot;Operations {#Operations}&quot;">​</a></h1><p>Operations are the fundamental building blocks of quantum circuits. They represent the various quantum gates and measurements that can be applied to qubits. In MonitoredQuantumCircuits.jl, operations are defined as structs, allowing for flexible extension and customization. This section provides an overview of the available operations, and how to apply them to circuits. If you are interested in implementing your own operations, please refer to the <a href="/MonitoredQuantumCircuits.jl/dev/interfaces/add_operation">Operations Interface</a> documentation.</p><h2 id="Available-Operations" tabindex="-1">Available Operations <a class="header-anchor" href="#Available-Operations" aria-label="Permalink to &quot;Available Operations {#Available-Operations}&quot;">​</a></h2><p>MonitoredQuantumCircuits.jl provides a variety of operations that can be applied to qubits within a circuit. These operations include unitary transformations and measurements. The following is a list of the available operations:</p><h3 id="Unitary-Operations" tabindex="-1">Unitary Operations <a class="header-anchor" href="#Unitary-Operations" aria-label="Permalink to &quot;Unitary Operations {#Unitary-Operations}&quot;">​</a></h3><div class="info custom-block"><p class="custom-block-title"><code>I</code></p><p>Represents the identity operation, which leaves the qubit unchanged.</p></div><div class="info custom-block"><p class="custom-block-title"><code>X</code></p><p>Represents the Pauli-X operation, which flips the state of the qubit.</p></div><div class="info custom-block"><p class="custom-block-title"><code>Y</code></p><p>Represents the Pauli-Y operation, which applies a bit-flip and phase-flip to the qubit.</p></div><div class="info custom-block"><p class="custom-block-title"><code>Z</code></p><p>Represents the Pauli-Z operation, which applies a phase-flip to the qubit.</p></div><div class="info custom-block"><p class="custom-block-title"><code>H</code></p><p>Represents the Hadamard operation, which creates superposition by transforming the basis states.</p></div><div class="info custom-block"><p class="custom-block-title"><code>CNOT</code></p><p>Represents the controlled-NOT operation, which flips the target qubit if the control qubit is in the |1⟩ state.</p></div><h3 id="Measurement-Operations" tabindex="-1">Measurement Operations <a class="header-anchor" href="#Measurement-Operations" aria-label="Permalink to &quot;Measurement Operations {#Measurement-Operations}&quot;">​</a></h3><div class="info custom-block"><p class="custom-block-title"><code>MX</code></p><p>Represents a measurement in the X basis, collapsing the qubit state to |+⟩ or |-⟩.</p></div><div class="info custom-block"><p class="custom-block-title"><code>MY</code></p><p>Represents a measurement in the Y basis, collapsing the qubit state to |+i⟩ or |-i⟩.</p></div><div class="info custom-block"><p class="custom-block-title"><code>MZ</code></p><p>Represents a measurement in the Z basis, collapsing the qubit state to |0⟩ or |1⟩.</p></div><div class="info custom-block"><p class="custom-block-title"><code>MXX</code></p><p>Represents a parity measurement in the X basis.</p></div><div class="info custom-block"><p class="custom-block-title"><code>MYY</code></p><p>Represents a parity measurement in the Y basis.</p></div><div class="info custom-block"><p class="custom-block-title"><code>MZZ</code></p><p>Represents a parity measurement in the Z basis.</p></div><div class="info custom-block"><p class="custom-block-title"><code>WeakMXX</code></p><p>Represents a weak parity measurement in the X basis.</p></div><div class="info custom-block"><p class="custom-block-title"><code>WeakMYY</code></p><p>Represents a weak parity measurement in the Y basis.</p></div><div class="info custom-block"><p class="custom-block-title"><code>WeakMZZ</code></p><p>Represents a weak parity measurement in the Z basis.</p></div><div class="info custom-block"><p class="custom-block-title"><code>MnPauli</code></p><p>Represents a parity measurement, which can be applied to multiple qubits.</p></div><hr><h2 id="API-Reference" tabindex="-1">API Reference <a class="header-anchor" href="#API-Reference" aria-label="Permalink to &quot;API Reference {#API-Reference}&quot;">​</a></h2>',24),h={class:"jldocstring custom-block",open:""},d=t("a",{id:"MonitoredQuantumCircuits.I-library-operations",href:"#MonitoredQuantumCircuits.I-library-operations"},[t("span",{class:"jlbinding"},"MonitoredQuantumCircuits.I")],-1),b=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">I</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Operation</span></span></code></pre></div><p>The I operation is a single-qubit gate that represents the identity operation, leaving the qubit unchanged.</p>',2),_=t("a",{href:"https://github.com/J-C-Q/MonitoredQuantumCircuits.jl/blob/142f89a840fa2559f65f3108b497dbfbb169d412/src/operations/I.jl#L1-L5",target:"_blank",rel:"noreferrer"},"source",-1),k={class:"jldocstring custom-block",open:""},m=t("a",{id:"MonitoredQuantumCircuits.X-library-operations",href:"#MonitoredQuantumCircuits.X-library-operations"},[t("span",{class:"jlbinding"},"MonitoredQuantumCircuits.X")],-1),g=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">X</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Operation</span></span></code></pre></div><p>The X operation is a single-qubit gate that flips the state of a qubit.</p>',2),f=t("a",{href:"https://github.com/J-C-Q/MonitoredQuantumCircuits.jl/blob/142f89a840fa2559f65f3108b497dbfbb169d412/src/operations/X.jl#L1-L5",target:"_blank",rel:"noreferrer"},"source",-1),y={class:"jldocstring custom-block",open:""},C=t("a",{id:"MonitoredQuantumCircuits.Y-library-operations",href:"#MonitoredQuantumCircuits.Y-library-operations"},[t("span",{class:"jlbinding"},"MonitoredQuantumCircuits.Y")],-1),T=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Operation</span></span></code></pre></div><p>The Y operation is a single-qubit gate that applies a phase of π to the |1⟩ state.</p>',2),j=t("a",{href:"https://github.com/J-C-Q/MonitoredQuantumCircuits.jl/blob/142f89a840fa2559f65f3108b497dbfbb169d412/src/operations/Y.jl#L1-L5",target:"_blank",rel:"noreferrer"},"source",-1),M={class:"jldocstring custom-block",open:""},v=t("a",{id:"MonitoredQuantumCircuits.Z-library-operations",href:"#MonitoredQuantumCircuits.Z-library-operations"},[t("span",{class:"jlbinding"},"MonitoredQuantumCircuits.Z")],-1),Q=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Z</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Operation</span></span></code></pre></div><p>The Z operation is a single-qubit gate that applies a phase of π to the |1⟩ state.</p>',2),E=t("a",{href:"https://github.com/J-C-Q/MonitoredQuantumCircuits.jl/blob/142f89a840fa2559f65f3108b497dbfbb169d412/src/operations/Z.jl#L1-L5",target:"_blank",rel:"noreferrer"},"source",-1),A={class:"jldocstring custom-block",open:""},F=t("a",{id:"MonitoredQuantumCircuits.H-library-operations",href:"#MonitoredQuantumCircuits.H-library-operations"},[t("span",{class:"jlbinding"},"MonitoredQuantumCircuits.H")],-1),q=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">H</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Operation</span></span></code></pre></div><p>The H operation is a single-qubit gate that creates superposition by applying a Hadamard transformation.</p>',2),O=t("a",{href:"https://github.com/J-C-Q/MonitoredQuantumCircuits.jl/blob/142f89a840fa2559f65f3108b497dbfbb169d412/src/operations/H.jl#L1-L5",target:"_blank",rel:"noreferrer"},"source",-1),x={class:"jldocstring custom-block",open:""},P=t("a",{id:"MonitoredQuantumCircuits.CNOT-library-operations",href:"#MonitoredQuantumCircuits.CNOT-library-operations"},[t("span",{class:"jlbinding"},"MonitoredQuantumCircuits.CNOT")],-1),S=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CNOT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Operation</span></span></code></pre></div><p>The CNOT operation is a two-qubit gate that flips the target qubit if the control qubit is in the |1⟩ state.</p>',2),Y=t("a",{href:"https://github.com/J-C-Q/MonitoredQuantumCircuits.jl/blob/142f89a840fa2559f65f3108b497dbfbb169d412/src/operations/CNOT.jl#L1-L5",target:"_blank",rel:"noreferrer"},"source",-1),I={class:"jldocstring custom-block",open:""},X=t("a",{id:"MonitoredQuantumCircuits.MX-library-operations",href:"#MonitoredQuantumCircuits.MX-library-operations"},[t("span",{class:"jlbinding"},"MonitoredQuantumCircuits.MX")],-1),Z=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Operation</span></span></code></pre></div><p>The MX operation is a single-qubit measurement operation that measures the state of a qubit in the X basis.</p>',2),w=t("a",{href:"https://github.com/J-C-Q/MonitoredQuantumCircuits.jl/blob/142f89a840fa2559f65f3108b497dbfbb169d412/src/operations/MX.jl#L1-L5",target:"_blank",rel:"noreferrer"},"source",-1),R={class:"jldocstring custom-block",open:""},V=t("a",{id:"MonitoredQuantumCircuits.MY-library-operations",href:"#MonitoredQuantumCircuits.MY-library-operations"},[t("span",{class:"jlbinding"},"MonitoredQuantumCircuits.MY")],-1),D=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Operation</span></span></code></pre></div><p>The MY operation is a single-qubit measurement operation that measures the state of a qubit in the Y basis.</p>',2),B=t("a",{href:"https://github.com/J-C-Q/MonitoredQuantumCircuits.jl/blob/142f89a840fa2559f65f3108b497dbfbb169d412/src/operations/MY.jl#L1-L5",target:"_blank",rel:"noreferrer"},"source",-1),L={class:"jldocstring custom-block",open:""},N=t("a",{id:"MonitoredQuantumCircuits.MZ-library-operations",href:"#MonitoredQuantumCircuits.MZ-library-operations"},[t("span",{class:"jlbinding"},"MonitoredQuantumCircuits.MZ")],-1),W=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MZ</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Operation</span></span></code></pre></div><p>The MZ operation is a single-qubit measurement operation that measures the state of a qubit in the Z basis.</p>',2),J=t("a",{href:"https://github.com/J-C-Q/MonitoredQuantumCircuits.jl/blob/142f89a840fa2559f65f3108b497dbfbb169d412/src/operations/MZ.jl#L1-L5",target:"_blank",rel:"noreferrer"},"source",-1),H={class:"jldocstring custom-block",open:""},U=t("a",{id:"MonitoredQuantumCircuits.MXX-library-operations",href:"#MonitoredQuantumCircuits.MXX-library-operations"},[t("span",{class:"jlbinding"},"MonitoredQuantumCircuits.MXX")],-1),$=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MXX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MeasurementOperation</span></span></code></pre></div><p>The MXX operation is a two-qubit gate that applies an XX interaction between the two qubits. It is a type of measurement operation that can be used in quantum circuits.</p>',2),z=t("a",{href:"https://github.com/J-C-Q/MonitoredQuantumCircuits.jl/blob/142f89a840fa2559f65f3108b497dbfbb169d412/src/operations/MXX.jl#L1-L5",target:"_blank",rel:"noreferrer"},"source",-1),G={class:"jldocstring custom-block",open:""},K=t("a",{id:"MonitoredQuantumCircuits.MYY-library-operations",href:"#MonitoredQuantumCircuits.MYY-library-operations"},[t("span",{class:"jlbinding"},"MonitoredQuantumCircuits.MYY")],-1),tt=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MYY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MeasurementOperation</span></span></code></pre></div><p>The MYY operation is a two-qubit gate that applies a YY interaction between the two qubits. The operation is used to measure the state of the qubits in the YY basis.</p>',2),st=t("a",{href:"https://github.com/J-C-Q/MonitoredQuantumCircuits.jl/blob/142f89a840fa2559f65f3108b497dbfbb169d412/src/operations/MYY.jl#L1-L5",target:"_blank",rel:"noreferrer"},"source",-1),et={class:"jldocstring custom-block",open:""},it=t("a",{id:"MonitoredQuantumCircuits.MZZ-library-operations",href:"#MonitoredQuantumCircuits.MZZ-library-operations"},[t("span",{class:"jlbinding"},"MonitoredQuantumCircuits.MZZ")],-1),at=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MZZ</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MeasurementOperation</span></span></code></pre></div><p>The MZZ operation is a two-qubit measurement operation that measures the state of two qubits in the ZZ basis. The first qubit is the target qubit, and the second qubit is an ancilla qubit that is used to store the result of the operation.</p>',2),ot=t("a",{href:"https://github.com/J-C-Q/MonitoredQuantumCircuits.jl/blob/142f89a840fa2559f65f3108b497dbfbb169d412/src/operations/MZZ.jl#L1-L5",target:"_blank",rel:"noreferrer"},"source",-1),nt={class:"jldocstring custom-block",open:""},lt=t("a",{id:"MonitoredQuantumCircuits.WeakMXX-library-operations",href:"#MonitoredQuantumCircuits.WeakMXX-library-operations"},[t("span",{class:"jlbinding"},"MonitoredQuantumCircuits.WeakMXX")],-1),rt=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">WeakMXX </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MeasurementOperation</span></span></code></pre></div><p>The WeakMXX operation is a three-qubit gate that applies a weak XX interaction between the first two qubits, with a strength determined by the parameter t. The third qubit is an ancilla qubit that is used to store the result of the operation.</p>',2),pt=t("a",{href:"https://github.com/J-C-Q/MonitoredQuantumCircuits.jl/blob/142f89a840fa2559f65f3108b497dbfbb169d412/src/operations/WeakMXX.jl#L1-L5",target:"_blank",rel:"noreferrer"},"source",-1),ct={class:"jldocstring custom-block",open:""},ut=t("a",{id:"MonitoredQuantumCircuits.WeakMYY-library-operations",href:"#MonitoredQuantumCircuits.WeakMYY-library-operations"},[t("span",{class:"jlbinding"},"MonitoredQuantumCircuits.WeakMYY")],-1),ht=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">WeakMYY </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MeasurementOperation</span></span></code></pre></div><p>The WeakMYY operation is a three-qubit gate that applies a weak YY interaction between the first two qubits, with a strength determined by the parameter t. The third qubit is an ancilla qubit that is used to store the result of the operation.</p>',2),dt=t("a",{href:"https://github.com/J-C-Q/MonitoredQuantumCircuits.jl/blob/142f89a840fa2559f65f3108b497dbfbb169d412/src/operations/WeakMYY.jl#L1-L5",target:"_blank",rel:"noreferrer"},"source",-1),bt={class:"jldocstring custom-block",open:""},_t=t("a",{id:"MonitoredQuantumCircuits.WeakMZZ-library-operations",href:"#MonitoredQuantumCircuits.WeakMZZ-library-operations"},[t("span",{class:"jlbinding"},"MonitoredQuantumCircuits.WeakMZZ")],-1),kt=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">WeakMZZ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MeasurementOperation</span></span></code></pre></div><p>The WeakMZZ operation is a three-qubit gate that applies a weak ZZ interaction between the first two qubits, with a strength determined by the parameter t. The third qubit is an ancilla qubit that is used to store the result of the operation.</p>',2),mt=t("a",{href:"https://github.com/J-C-Q/MonitoredQuantumCircuits.jl/blob/142f89a840fa2559f65f3108b497dbfbb169d412/src/operations/WeakMZZ.jl#L1-L5",target:"_blank",rel:"noreferrer"},"source",-1),gt={class:"jldocstring custom-block",open:""},ft=t("a",{id:"MonitoredQuantumCircuits.MnPauli-library-operations",href:"#MonitoredQuantumCircuits.MnPauli-library-operations"},[t("span",{class:"jlbinding"},"MonitoredQuantumCircuits.MnPauli")],-1),yt=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MnPauli{N} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MeasurementOperation</span></span></code></pre></div><p>The MnPauli operation is a N-qubit measurement operation that measures the state of multiple qubits in the Pauli basis.</p>',2),Ct=t("a",{href:"https://github.com/J-C-Q/MonitoredQuantumCircuits.jl/blob/142f89a840fa2559f65f3108b497dbfbb169d412/src/operations/Pauli.jl#L1-L5",target:"_blank",rel:"noreferrer"},"source",-1);function Tt(jt,Mt,vt,Qt,Et,At){const s=r("Badge");return p(),l("div",null,[u,t("details",h,[t("summary",null,[d,a(),e(s,{type:"info",class:"jlObjectType jlType",text:"Type"})]),b,e(s,{type:"info",class:"source-link",text:"source"},{default:o(()=>[_]),_:1})]),t("details",k,[t("summary",null,[m,a(),e(s,{type:"info",class:"jlObjectType jlType",text:"Type"})]),g,e(s,{type:"info",class:"source-link",text:"source"},{default:o(()=>[f]),_:1})]),t("details",y,[t("summary",null,[C,a(),e(s,{type:"info",class:"jlObjectType jlType",text:"Type"})]),T,e(s,{type:"info",class:"source-link",text:"source"},{default:o(()=>[j]),_:1})]),t("details",M,[t("summary",null,[v,a(),e(s,{type:"info",class:"jlObjectType jlType",text:"Type"})]),Q,e(s,{type:"info",class:"source-link",text:"source"},{default:o(()=>[E]),_:1})]),t("details",A,[t("summary",null,[F,a(),e(s,{type:"info",class:"jlObjectType jlType",text:"Type"})]),q,e(s,{type:"info",class:"source-link",text:"source"},{default:o(()=>[O]),_:1})]),t("details",x,[t("summary",null,[P,a(),e(s,{type:"info",class:"jlObjectType jlType",text:"Type"})]),S,e(s,{type:"info",class:"source-link",text:"source"},{default:o(()=>[Y]),_:1})]),t("details",I,[t("summary",null,[X,a(),e(s,{type:"info",class:"jlObjectType jlType",text:"Type"})]),Z,e(s,{type:"info",class:"source-link",text:"source"},{default:o(()=>[w]),_:1})]),t("details",R,[t("summary",null,[V,a(),e(s,{type:"info",class:"jlObjectType jlType",text:"Type"})]),D,e(s,{type:"info",class:"source-link",text:"source"},{default:o(()=>[B]),_:1})]),t("details",L,[t("summary",null,[N,a(),e(s,{type:"info",class:"jlObjectType jlType",text:"Type"})]),W,e(s,{type:"info",class:"source-link",text:"source"},{default:o(()=>[J]),_:1})]),t("details",H,[t("summary",null,[U,a(),e(s,{type:"info",class:"jlObjectType jlType",text:"Type"})]),$,e(s,{type:"info",class:"source-link",text:"source"},{default:o(()=>[z]),_:1})]),t("details",G,[t("summary",null,[K,a(),e(s,{type:"info",class:"jlObjectType jlType",text:"Type"})]),tt,e(s,{type:"info",class:"source-link",text:"source"},{default:o(()=>[st]),_:1})]),t("details",et,[t("summary",null,[it,a(),e(s,{type:"info",class:"jlObjectType jlType",text:"Type"})]),at,e(s,{type:"info",class:"source-link",text:"source"},{default:o(()=>[ot]),_:1})]),t("details",nt,[t("summary",null,[lt,a(),e(s,{type:"info",class:"jlObjectType jlType",text:"Type"})]),rt,e(s,{type:"info",class:"source-link",text:"source"},{default:o(()=>[pt]),_:1})]),t("details",ct,[t("summary",null,[ut,a(),e(s,{type:"info",class:"jlObjectType jlType",text:"Type"})]),ht,e(s,{type:"info",class:"source-link",text:"source"},{default:o(()=>[dt]),_:1})]),t("details",bt,[t("summary",null,[_t,a(),e(s,{type:"info",class:"jlObjectType jlType",text:"Type"})]),kt,e(s,{type:"info",class:"source-link",text:"source"},{default:o(()=>[mt]),_:1})]),t("details",gt,[t("summary",null,[ft,a(),e(s,{type:"info",class:"jlObjectType jlType",text:"Type"})]),yt,e(s,{type:"info",class:"source-link",text:"source"},{default:o(()=>[Ct]),_:1})])])}const Ot=n(c,[["render",Tt]]);export{qt as __pageData,Ot as default};

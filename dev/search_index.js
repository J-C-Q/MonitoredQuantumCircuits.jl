var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = MonitoredQuantumCircuits","category":"page"},{"location":"#MonitoredQuantumCircuits","page":"Home","title":"MonitoredQuantumCircuits","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for MonitoredQuantumCircuits.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [MonitoredQuantumCircuits]","category":"page"},{"location":"#MonitoredQuantumCircuits.XX","page":"Home","title":"MonitoredQuantumCircuits.XX","text":"XX() <: Operation\n\nA singelton type representing the XX operation.\n\n\n\n\n\n","category":"type"},{"location":"#MonitoredQuantumCircuits.YY","page":"Home","title":"MonitoredQuantumCircuits.YY","text":"YY() <: Operation\n\nA singelton type representing the XX operation.\n\n\n\n\n\n","category":"type"},{"location":"#MonitoredQuantumCircuits.ZZ","page":"Home","title":"MonitoredQuantumCircuits.ZZ","text":"ZZ() <: Operation\n\nA singelton type representing the XX operation.\n\n\n\n\n\n","category":"type"},{"location":"#MonitoredQuantumCircuits.EmptyCircuit-Tuple{Lattice}","page":"Home","title":"MonitoredQuantumCircuits.EmptyCircuit","text":"EmptyCircuit(lattice::Lattice)\n\nCreate an empty circuit on the given lattice.\n\n\n\n\n\n","category":"method"},{"location":"#MonitoredQuantumCircuits.NishimoriCircuit-Tuple{Lattice}","page":"Home","title":"MonitoredQuantumCircuits.NishimoriCircuit","text":"NishimoriCircuit(lattice::Lattice)\n\nCreate a Nishimori circuit on the given lattice, i.e. a circuit with one layer of ZZ operations on all bonds.\n\n\n\n\n\n","category":"method"},{"location":"#MonitoredQuantumCircuits.apply!-Tuple{Circuit, Integer, Operation, Vararg{Integer}}","page":"Home","title":"MonitoredQuantumCircuits.apply!","text":"apply!(circuit::Circuit, executionPosition::Integer, operation::Operation, position::Vararg{Integer})\n\nApply the given operation at a given execution time step at the given position(s) in the circuit. The executionPosition can be used to schedule multiple operations at the same time step. However it is important to first check if the operations are compatible with each other (as of now this will show a warning which can be muted with mute=true).\n\n\n\n\n\n","category":"method"},{"location":"#MonitoredQuantumCircuits.apply!-Tuple{Circuit, Operation, Vararg{Integer}}","page":"Home","title":"MonitoredQuantumCircuits.apply!","text":"apply!(circuit::Circuit, operation::Operation, position::Vararg{Integer})\n\nApply the given operation at the given position(s) in the circuit. Operations that act on more than one qubit need to have the same number of position arguments as qubits they act on.\n\n\n\n\n\n","category":"method"},{"location":"#MonitoredQuantumCircuits.isClifford-Tuple{Circuit}","page":"Home","title":"MonitoredQuantumCircuits.isClifford","text":"isClifford(circuit::Circuit)\n\nCheck if the circuit is a Clifford circuit, i.e. only contains Clifford operations. Returns true if all operations are Clifford operations, false otherwise.\n\n\n\n\n\n","category":"method"},{"location":"#MonitoredQuantumCircuits.isClifford-Tuple{Operation}","page":"Home","title":"MonitoredQuantumCircuits.isClifford","text":"isClifford(operation::Operation)\n\nReturn whether the operation is a Clifford operation.\n\n\n\n\n\n","category":"method"},{"location":"#MonitoredQuantumCircuits.nQubits-Tuple{Operation}","page":"Home","title":"MonitoredQuantumCircuits.nQubits","text":"nQubits(operation::Operation)\n\nReturn the number of qubits the operation acts on.\n\n\n\n\n\n","category":"method"},{"location":"#MonitoredQuantumCircuits.qiskitRepresentation-Tuple{Operation}","page":"Home","title":"MonitoredQuantumCircuits.qiskitRepresentation","text":"qiskitRepresentation(operation::Operation)\n\nReturn the qiskit representation of the operation.\n\n\n\n\n\n","category":"method"}]
}
